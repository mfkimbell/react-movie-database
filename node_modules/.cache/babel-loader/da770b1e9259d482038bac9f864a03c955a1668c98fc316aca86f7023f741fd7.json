{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellkimbell/gitlab/reactProjects/movies/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\n//imrc cc\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      currentPage: 1,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n    this.handleDelete = movie => {\n      console.log(\"movie deleted\", movie);\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies: movies\n      }); //key value\n    };\n    this.handleLike = movie => {\n      console.log(\"movie liked\", movie);\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies: movies\n      });\n    };\n    this.handlePageChange = page => {\n      console.log(page);\n      this.setState({\n        currentPage: page\n      });\n    };\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n    this.handleSort = path => {\n      const sortColumn = {\n        ...this.state.sortColumn\n      };\n      if (sortColumn.path === path) sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";else {\n        sortColumn.path = path;\n        sortColumnm;\n      }\n      console.log(path);\n      this.setState({\n        sortColumn: {\n          path,\n          order: \"asc\"\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres: genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      movies: allMovies,\n      selectedGenre\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }, this);\n    console.log(\"selected genre -\", selectedGenre);\n    const filtered = selectedGenre && selectedGenre.name !== \"All Genres\" ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize, selectedGenre);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          onItemSelect: this.handleGenreSelect,\n          selectedItem: this.state.selectedGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" movies in the database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          onPageChange: this.handlePageChange,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","getMovies","Pagination","paginate","ListGroup","getGenres","MoviesTable","_","jsxDEV","_jsxDEV","Movies","constructor","arguments","state","movies","genres","pageSize","currentPage","sortColumn","path","order","handleDelete","movie","console","log","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","sortColumnm","componentDidMount","name","render","length","count","allMovies","children","fileName","_jsxFileName","lineNumber","columnNumber","filtered","sorted","orderBy","className","items","onItemSelect","selectedItem","onLike","onDelete","onSort","itemsCount","onPageChange"],"sources":["/Users/mitchellkimbell/gitlab/reactProjects/movies/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\n//imrc cc\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres: genres,\n    });\n  }\n\n  handleDelete = (movie) => {\n    console.log(\"movie deleted\", movie);\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies: movies }); //key value\n  };\n\n  handleLike = (movie) => {\n    console.log(\"movie liked\", movie);\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies: movies });\n  };\n\n  handlePageChange = (page) => {\n    console.log(page);\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (path) => {\n    const sortColumn = { ...this.state.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumnm\n      \n    }\n    console.log(path);\n    this.setState({ sortColumn: { path, order: \"asc\" } });\n  };\n\n  render() {\n  const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      movies: allMovies,\n      selectedGenre,\n    } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database</p>;\n    console.log(\"selected genre -\", selectedGenre);\n\n    const filtered =\n      selectedGenre && selectedGenre.name !== \"All Genres\"\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n    \n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize, selectedGenre);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            onItemSelect={this.handleGenreSelect}\n            selectedItem={this.state.selectedGenre}\n          ></ListGroup>\n        </div>\n        <div className=\"col\">\n          <p>Showing {filtered.length} movies in the database</p>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          ></MoviesTable>\n          {/* <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Genre</th>\n                <th>Stock</th>\n                <th>Rate</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {movies.map(\n                //this is the local movies instance\n                (movie) => (\n                  <tr key={movie._id}>\n                    <td>{movie.title}</td>\n                    <td>{movie.genre.name}</td>\n                    <td>{movie.numberInStock}</td>\n                    <td>{movie.dailyRentalRate}</td>\n                    <td>\n                      <Like\n                        liked={movie.liked}\n                        onClickToggle={() => this.handleLike(movie)}\n                      ></Like>\n                    </td>\n                    <td>\n                      <button\n                        onClick={() => this.handleDelete(movie)}\n                        className=\"btn btn-danger btn-sm\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                )\n              )}\n            </tbody>\n          </table> */}\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          ></Pagination>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}